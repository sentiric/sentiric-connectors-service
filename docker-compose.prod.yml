# docker-compose.prod.yml
# Service Üretim ortamı

networks:
  sentiric-net:
    name: "${NETWORK_NAME:-sentiric-net}"
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}

# volumes:
  # [infra]: Temel Altyapı (Infrastructure Layer)
  # --------------------------------------------------

services:
  # [presentation-gateway]: Arayüz ve Giriş Katmanı (Presentation Layer)
  # --------------------------------------------------     

  connectors-service:
    build: { context: ../sentiric-api-gateway-service }
    env_file: ["${ENV_FILE_PATH}"]
    volumes: 
      - "${CONFIG_REPO_PATH}:/sentiric-config:ro"
      - "${CERTIFICATES_REPO_PATH}:/sentiric-certificates:ro"
      - "${ASSETS_REPO_PATH}:/sentiric-assets:ro"
    ports: 
      - "17010:${CONNECTORS_SERVICE_HTTP_PORT:-17010}"
      - "17011:${CONNECTORS_SERVICE_GRPC_PORT:-17011}"
      - "17012:${CONNECTORS_SERVICE_METRICS_PORT:-17012}"            
    networks:
      sentiric-net:
        ipv4_address: ${CONNECTORS_SERVICE_IPV4_ADDRESS}
    dns:
      - ${PRIMARY_DNS:-8.8.8.8}
      - ${SECONDARY_DNS:-1.1.1.1} 
    restart: always
    # depends_on: { 
    #   postgres: { condition: service_healthy }
    # }
