networks:
  sentiric-net:
    name: ${NETWORK_NAME:-sentiric-net}
    driver: bridge

volumes:
  postgres_data:    

services:
  postgres:
    image: postgres:16-alpine
    env_file: 
      - ./.env.docker
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../sentiric-infrastructure/postgres-init:/docker-entrypoint-initdb.d
    networks:
      - sentiric-net
    profiles:
      - default
      - data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5   

  connectors-service:

    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: sentiric-connectors-service

    env_file: 
      - ./.env.docker

    volumes:
      - ../sentiric-infrastructure/tls/certs:/etc/sentiric/tls:ro

    ports:
      - "${CONNECTOR_SERVICE_PORT}:${CONNECTOR_SERVICE_PORT}"

    networks:
      - sentiric-net

    profiles:
      - default
      - app # Bu servisi 'app' profiline dahil ediyoruz      
      
    restart: always

    depends_on:
      postgres:
        condition: service_healthy    